{"version":3,"sources":["styles/Calc.module.scss","styles/Navigation.module.scss","styles/CalcPuzzle.module.scss","assets/images/running.svg","assets/images/swimming.svg","assets/images/cycling.svg","assets/images/gym.svg","assets/images/heart-rate.svg","styles/Categories.module.scss","styles/Button.module.scss","styles/Input.module.scss","styles/Unit.module.scss","reducers/index.js","reducers/chosenCalculatorReducer.js","components/molecules/Navigation.js","actions/index.js","components/molecules/CalcPuzzle.js","components/routes/Categories.js","assets/data.js","components/atoms/Button.js","components/atoms/Input.js","components/atoms/Unit.js","components/molecules/RunningPace.js","components/molecules/TimeSegment.js","components/routes/RunnigCalc.js","components/molecules/SwimmingPace.js","components/routes/SwimmingCalc.js","components/routes/CyclingCalc.js","components/molecules/OneRepMax.js","components/routes/GymCalc.js","components/molecules/BMI.js","components/routes/HealthCalc.js","components/App.js","index.js"],"names":["module","exports","combineReducers","chosenCalculator","prevState","action","type","payload","routePaths","Running","Swimming","Cycling","Gym","Health","connect","className","styles","nav","item","exact","to","updateChosenCalculator","calculatorName","CalcPuzzle","children","icon","calcQ","puzzle","src","alt","routes","name","path","RunningIcon","SwimmingIcon","CyclingIcon","GymIcon","HeartRateIcon","categories","map","route","runningRaceOptions","value","m","label","swimmingRaceOptions","defaultInputValues","kilometers","meters","hours","minutes","seconds","paceMinutes","paceSeconds","speed","selected","Button","onClick","form","button","Input","onChange","input","Unit","unit","RunningPace","useState","inputValues","setInputValue","handleInputs","e","obj","target","useEffect","distance","time","paceTime","Math","floor","avgSpeed","toFixed","calcWrap","note","inputGroup","select","options","isSearchable","placeholder","resultsContainer","result","btnContainer","preventDefault","TimeSegment","setPaceMinutes","setPaceSeconds","setKilometers","setMeters","setSelected","setTime","newTime","SwimmingPace","setDistance","pace","setPace","newPace","CyclingCalc","OneRepMax","weight","setWeight","reps","setReps","maxRep","setMaxRep","orm","round","BMI","height","setHeight","bmi","setBMI","App","basename","component","Categories","RunnnigCalc","SwimmingCalc","GymCalc","HealthCalc","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57e30122.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"calcWrap\":\"Calc_calcWrap__3qTZU\",\"note\":\"Calc_note__2TlHi\",\"inputGroup\":\"Calc_inputGroup__3yDOv\",\"select\":\"Calc_select__xXUYE\",\"resultsContainer\":\"Calc_resultsContainer__3such\",\"result\":\"Calc_result__cfSib\",\"btnContainer\":\"Calc_btnContainer__1upgM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__2xjD5\",\"item\":\"Navigation_item__LluMX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"puzzle\":\"CalcPuzzle_puzzle__2ecDu\"};","module.exports = __webpack_public_path__ + \"static/media/running.ad17a909.svg\";","module.exports = __webpack_public_path__ + \"static/media/swimming.e7c181a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/cycling.0c155670.svg\";","module.exports = __webpack_public_path__ + \"static/media/gym.4bf72df0.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart-rate.efc2fd96.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"categories\":\"Categories_categories__24UkM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__935yI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__1mJu6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unit\":\"Unit_unit__1HFql\"};","import {combineReducers} from \"redux\";\r\n\r\nimport chosenCalculatorReducer from \"./chosenCalculatorReducer\";\r\n\r\nexport default combineReducers({\r\n  chosenCalculator: chosenCalculatorReducer\r\n});\r\n","export default (prevState = \"\", action) => {\r\n  switch (action.type) {\r\n    case \"CHOSEN_CALCULATOR\":\r\n      return action.payload;\r\n\r\n    default:\r\n      return prevState;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport styles from '../../styles/Navigation.module.scss';\r\n\r\nconst routePaths = {\r\n  Running: '/running-calc',\r\n  Swimming: '/swimming-calc',\r\n  Cycling: '/cycling-calc',\r\n  Gym: '/gym-calc',\r\n  Health: '/health-calc'\r\n};\r\n\r\nconst Navigation = ({chosenCalculator}) => {\r\n  return (\r\n    <nav className={styles.nav}>\r\n      <ul>\r\n        <li>\r\n          <NavLink className={styles.item} exact to=\"/\">\r\n            Categories\r\n          </NavLink>\r\n        </li>\r\n\r\n        {chosenCalculator && (\r\n          <li>\r\n            <span>> </span>\r\n            <NavLink className={styles.item} to={routePaths[chosenCalculator]}>\r\n              {chosenCalculator}\r\n            </NavLink>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({chosenCalculator}) => {\r\n  return {\r\n    chosenCalculator\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Navigation);\r\n","export const updateChosenCalculator = (calculatorName = \"\") => {\r\n  return {\r\n    type: \"CHOSEN_CALCULATOR\",\r\n    payload: calculatorName\r\n  };\r\n};\r\n","import React from 'react';\r\n\r\nimport styles from '../../styles/CalcPuzzle.module.scss';\r\n\r\nconst CalcPuzzle = ({children, icon, calcQ}) => {\r\n  return children ? (\r\n    <div className={styles.puzzle}>\r\n      <img src={icon} alt={children} />\r\n\r\n      <h2>{children}</h2>\r\n      <span>\r\n        {calcQ ? calcQ : 0} {calcQ === 1 ? 'calculator' : 'calculators'}\r\n      </span>\r\n    </div>\r\n  ) : (\r\n    <div className={styles.puzzle}></div>\r\n  );\r\n};\r\n\r\nexport default CalcPuzzle;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {updateChosenCalculator} from '../../actions/index';\r\n\r\nimport CalcPuzzle from '../molecules/CalcPuzzle';\r\nimport RunningIcon from '../../assets/images/running.svg';\r\nimport SwimmingIcon from '../../assets/images/swimming.svg';\r\nimport CyclingIcon from '../../assets/images/cycling.svg';\r\nimport GymIcon from '../../assets/images/gym.svg';\r\nimport HeartRateIcon from '../../assets/images/heart-rate.svg';\r\nimport styles from '../../styles/Categories.module.scss';\r\n\r\nconst routes = [\r\n  {name: 'Running', path: '/running-calc', calcQ: 2, icon: RunningIcon},\r\n  {name: 'Swimming', path: '/swimming-calc', calcQ: 1, icon: SwimmingIcon},\r\n  {name: 'Cycling', path: '', calcQ: 0, icon: CyclingIcon},\r\n  {name: 'Gym', path: '/gym-calc', calcQ: 1, icon: GymIcon},\r\n  {name: 'Health', path: '/health-calc', calcQ: 1, icon: HeartRateIcon},\r\n  {name: '', path: '', calcQ: '', icon: ''}\r\n];\r\n\r\nconst Categories = ({updateChosenCalculator}) => {\r\n  updateChosenCalculator();\r\n  return (\r\n    <div className={styles.categories}>\r\n      {routes.map(route => (\r\n        <Link to={route.path}>\r\n          <CalcPuzzle icon={route.icon} calcQ={route.calcQ}>\r\n            {route.name}\r\n          </CalcPuzzle>\r\n        </Link>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, {updateChosenCalculator})(Categories);\r\n","export const runningRaceOptions = [\r\n  {value: '42', m: '195', label: 'Marathon'},\r\n  {value: '21', m: '98', label: 'Half-marathon'},\r\n  {value: '20', m: '', label: '20 km'},\r\n  {value: '15', m: '', label: '15 km'},\r\n  {value: '10', m: '', label: '10 km'},\r\n  {value: '5', m: '', label: '5 km'},\r\n  {value: '1', m: '', label: '1 km'},\r\n  {value: '', m: '800', label: '800 m'},\r\n  {value: '', m: '400', label: '400 m'}\r\n];\r\n\r\nexport const swimmingRaceOptions = [\r\n  {value: '1000', label: '1000 m'},\r\n  {value: '750', label: '750 m'},\r\n  {value: '500', label: '500 m'},\r\n  {value: '400', label: '400 m'},\r\n  {value: '300', label: '300 m'},\r\n  {value: '200', label: '200 m'},\r\n  {value: '150', label: '150 m'},\r\n  {value: '50', label: '50 m'},\r\n  {value: '25', label: '25 m'}\r\n];\r\n\r\nexport const defaultInputValues = {\r\n  kilometers: '',\r\n  meters: '',\r\n  hours: '',\r\n  minutes: '',\r\n  seconds: '',\r\n  paceMinutes: '--',\r\n  paceSeconds: '--',\r\n  speed: '',\r\n  selected: 'Select...'\r\n};\r\n","import React from 'react';\r\n\r\nimport styles from '../../styles/Button.module.scss';\r\n\r\nconst Button = ({children, onClick, form}) => {\r\n  return (\r\n    <button form={form} className={styles.button} onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nimport styles from '../../styles/Input.module.scss';\r\n\r\nconst Input = ({name, value, onChange}) => {\r\n  return (\r\n    <input\r\n      className={styles.input}\r\n      type=\"number\"\r\n      name={name}\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\n\r\nimport styles from '../../styles/Unit.module.scss';\r\n\r\nconst Unit = ({children}) => {\r\n  return <div className={styles.unit}>{children}</div>;\r\n};\r\n\r\nexport default Unit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport Select from 'react-select';\r\n\r\nimport {runningRaceOptions, defaultInputValues} from '../../assets/data';\r\nimport Button from '../atoms/Button';\r\nimport Input from '../atoms/Input';\r\nimport Unit from '../atoms/Unit';\r\nimport styles from '../../styles/Calc.module.scss';\r\n\r\nconst RunningPace = () => {\r\n  const [inputValues, setInputValue] = useState(defaultInputValues);\r\n\r\n  const handleInputs = (e, obj = {}) => {\r\n    setInputValue({...inputValues, [e.target.name]: e.target.value, ...obj});\r\n  };\r\n\r\n  useEffect(() => {\r\n    // prettier-ignore\r\n    const { kilometers, meters, hours, minutes, seconds,speed } = inputValues;\r\n\r\n    const distance = +kilometers * 1000 + +meters;\r\n    const time = +hours * 3600 + +minutes * 60 + +seconds;\r\n    const paceTime = Math.floor((+time * 1000) / distance);\r\n    const avgSpeed =\r\n      distance && time ? (distance / 1000 / (time / 3600)).toFixed(2) : 0;\r\n\r\n    if (speed !== avgSpeed) {\r\n      setInputValue({\r\n        ...inputValues,\r\n        speed: avgSpeed,\r\n        paceMinutes: paceTime\r\n          ? Math.floor(paceTime / 60)\r\n          : defaultInputValues.paceMinutes,\r\n        paceSeconds: paceTime\r\n          ? paceTime % 60 < 10\r\n            ? `0${Math.floor(paceTime % 60)}`\r\n            : Math.floor(paceTime % 60)\r\n          : defaultInputValues.paceSeconds\r\n      });\r\n    }\r\n  }, [inputValues]);\r\n  return (\r\n    <>\r\n      {/* RUNNING PACE CALCULATOR */}\r\n      <section className={styles.calcWrap}>\r\n        <h3>Runnning Pace Calculator</h3>\r\n        <p className={styles.note}>\r\n          With this calculator, you can check what is the minimum average speed\r\n          and pace to achieve your goal.\r\n        </p>\r\n        <form>\r\n          {/* Distance */}\r\n          <div className={styles.inputGroup}>\r\n            <label>Distance (type or select): </label>\r\n            <Input\r\n              name=\"kilometers\"\r\n              value={inputValues.kilometers}\r\n              onChange={e =>\r\n                handleInputs(e, {selected: defaultInputValues.selected})\r\n              }\r\n            />\r\n            <Unit>km</Unit>\r\n            <Input\r\n              name=\"meters\"\r\n              value={inputValues.meters}\r\n              onChange={e =>\r\n                handleInputs(e, {selected: defaultInputValues.selected})\r\n              }\r\n            />\r\n            <Unit>m</Unit>\r\n            <Select\r\n              className={styles.select}\r\n              options={runningRaceOptions}\r\n              isSearchable={false}\r\n              placeholder={inputValues.selected}\r\n              value={inputValues.selected}\r\n              onChange={e =>\r\n                setInputValue({\r\n                  ...inputValues,\r\n                  kilometers: e.value,\r\n                  meters: e.m,\r\n                  selected: e.label\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n\r\n          {/* Time */}\r\n          <div className={styles.inputGroup}>\r\n            <label>Time (your planned result): </label>\r\n            <Input\r\n              name=\"hours\"\r\n              value={inputValues.hours}\r\n              onChange={e => handleInputs(e)}\r\n            />\r\n            <Unit>hrs</Unit>\r\n            <Input\r\n              name=\"minutes\"\r\n              value={inputValues.minutes}\r\n              onChange={e => handleInputs(e)}\r\n            />\r\n            <Unit>min</Unit>\r\n            <Input\r\n              name=\"seconds\"\r\n              value={inputValues.seconds}\r\n              onChange={e => handleInputs(e)}\r\n            />\r\n            <Unit>sec</Unit>\r\n          </div>\r\n          <div className={styles.resultsContainer}>\r\n            <div>\r\n              <h4>Pace</h4>\r\n              <div className={styles.result}>\r\n                <p>\r\n                  <span>{inputValues.paceMinutes}</span>:\r\n                  <span>{inputValues.paceSeconds}</span> /km\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <h4>Speed</h4>\r\n              <div className={styles.result}>\r\n                <p>\r\n                  <span>{inputValues.speed ? inputValues.speed : '--'}</span>{' '}\r\n                  km/h\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={styles.btnContainer}>\r\n            <Button\r\n              onClick={e => {\r\n                e.preventDefault();\r\n                setInputValue({...defaultInputValues});\r\n              }}\r\n            >\r\n              Reset <i className=\"fas fa-undo-alt\"></i>\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RunningPace;\r\n","import React, {useEffect, useState} from 'react';\r\nimport Select from 'react-select';\r\n\r\nimport {runningRaceOptions} from '../../assets/data';\r\nimport Button from '../atoms/Button';\r\nimport Input from '../atoms/Input';\r\nimport Unit from '../atoms/Unit';\r\nimport styles from '../../styles/Calc.module.scss';\r\n\r\nconst TimeSegment = () => {\r\n  const [paceMinutes, setPaceMinutes] = useState('');\r\n  const [paceSeconds, setPaceSeconds] = useState('');\r\n  const [kilometers, setKilometers] = useState('');\r\n  const [meters, setMeters] = useState('');\r\n  const [selected, setSelected] = useState('Select...');\r\n  const [time, setTime] = useState(0);\r\n\r\n  let hours = Math.floor(time / 3600),\r\n    minutes = Math.floor((time / 60) % 60),\r\n    seconds = Math.floor(time % 60);\r\n\r\n  const renderTimeResult = () => {\r\n    return time ? (\r\n      <p>\r\n        <span>{hours > 9 ? hours : `0${hours}`}</span>:\r\n        <span>{minutes > 9 ? minutes : `0${minutes}`}</span>:\r\n        <span>{seconds > 9 ? seconds : `0${seconds}`}</span>\r\n      </p>\r\n    ) : (\r\n      <p>\r\n        <span>--</span>:<span>--</span>:<span>--</span>\r\n      </p>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    const speed = (1 / (+paceMinutes * 60 + +paceSeconds)) * 3600;\r\n    const distance = +kilometers + +meters / 1000;\r\n    const newTime = (distance / speed) * 3600;\r\n\r\n    if (newTime !== time) setTime(newTime);\r\n  }, [paceMinutes, paceSeconds, kilometers, meters, time]);\r\n\r\n  return (\r\n    <>\r\n      {/* TIME SEGMENT CALCULATOR */}\r\n      <section className={styles.calcWrap}>\r\n        <h3>Time Segment Calculator</h3>\r\n        <p className={styles.note}>\r\n          With this calculator, you can check what is the minimum time that you\r\n          should overcome selected distance (e.g. stadion loop).\r\n        </p>\r\n        <form>\r\n          {/* Pace */}\r\n          <div className={styles.inputGroup}>\r\n            <label>Pace: </label>\r\n            <Input\r\n              name=\"minutes\"\r\n              value={paceMinutes}\r\n              onChange={e => setPaceMinutes(e.target.value)}\r\n            />\r\n            <Unit>min</Unit>\r\n            <Input\r\n              name=\"seconds\"\r\n              value={paceSeconds}\r\n              onChange={e => setPaceSeconds(e.target.value)}\r\n            />\r\n            <Unit>sec</Unit>\r\n          </div>\r\n\r\n          {/* Distance */}\r\n          <div className={styles.inputGroup}>\r\n            <label>Distance (type or select): </label>\r\n            <Input\r\n              name=\"kilometers\"\r\n              value={kilometers}\r\n              onChange={e => {\r\n                setKilometers(e.target.value);\r\n                setSelected('Select...');\r\n              }}\r\n            />\r\n            <Unit>km</Unit>\r\n            <Input\r\n              name=\"meters\"\r\n              value={meters}\r\n              onChange={e => {\r\n                setMeters(e.target.value);\r\n                setSelected('Select...');\r\n              }}\r\n            />\r\n            <Unit>m</Unit>\r\n            <Select\r\n              className={styles.select}\r\n              options={runningRaceOptions}\r\n              isSearchable={false}\r\n              placeholder={selected}\r\n              value={selected}\r\n              onChange={e => {\r\n                setKilometers(e.value);\r\n                setMeters(e.m);\r\n                setSelected(e.label);\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div className={styles.resultsContainer}>\r\n            <div>\r\n              <h4>Time</h4>\r\n              <div className={styles.result}>{renderTimeResult()}</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={styles.btnContainer}>\r\n            <Button\r\n              onClick={e => {\r\n                e.preventDefault();\r\n                setPaceMinutes('');\r\n                setPaceSeconds('');\r\n                setKilometers('');\r\n                setMeters('');\r\n                setSelected('Select...');\r\n              }}\r\n            >\r\n              Reset <i className=\"fas fa-undo-alt\"></i>\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TimeSegment;\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport RunningPace from '../molecules/RunningPace';\r\nimport TimeSegment from '../molecules/TimeSegment';\r\nimport {updateChosenCalculator} from '../../actions/index';\r\n\r\nconst RunningCalc = ({updateChosenCalculator}) => {\r\n  updateChosenCalculator('Running');\r\n\r\n  return (\r\n    <>\r\n      <RunningPace />\r\n      <TimeSegment />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(null, {updateChosenCalculator})(RunningCalc);\r\n","import React, {useState, useEffect} from 'react';\r\nimport Select from 'react-select';\r\n\r\nimport {swimmingRaceOptions} from '../../assets/data';\r\nimport Button from '../atoms/Button';\r\nimport Input from '../atoms/Input';\r\nimport Unit from '../atoms/Unit';\r\nimport styles from '../../styles/Calc.module.scss';\r\n\r\nconst SwimmingPace = () => {\r\n  const [distance, setDistance] = useState('');\r\n  const [time, setTime] = useState({minutes: '', seconds: ''});\r\n  const [pace, setPace] = useState({minutes: '', seconds: ''});\r\n  const [selected, setSelected] = useState('Select...');\r\n\r\n  useEffect(() => {\r\n    if (distance && time) {\r\n      const totalTime = +time.minutes * 60 + +time.seconds;\r\n      const newPace = (totalTime * 100) / +distance;\r\n      setPace({\r\n        minutes: Math.floor(newPace / 60),\r\n        seconds: Math.floor(newPace % 60)\r\n      });\r\n    }\r\n  }, [time, distance, pace.minutes, pace.seconds]);\r\n\r\n  const renderPaceResult = () => {\r\n    return pace.minutes || pace.seconds ? (\r\n      <p>\r\n        <span>{pace.minutes}</span>:\r\n        <span>{pace.seconds < 10 ? `0${pace.seconds}` : pace.seconds}</span>{' '}\r\n        /100m\r\n      </p>\r\n    ) : (\r\n      <p>\r\n        <span>--</span>:<span>--</span> /100m\r\n      </p>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className={styles.calcWrap}>\r\n        <h3>Swimming Pace Calculator</h3>\r\n        <p className={styles.note}>\r\n          With this calculator, you can check what is the minimum average pace\r\n          to achieve your goal.\r\n        </p>\r\n        <form>\r\n          {/* Distance */}\r\n          <div className={styles.inputGroup}>\r\n            <label>Distance (type or select): </label>\r\n            <Input\r\n              name=\"meters\"\r\n              value={distance}\r\n              onChange={e => {\r\n                setDistance(e.target.value);\r\n                setSelected('Select...');\r\n              }}\r\n            />\r\n            <Unit>m</Unit>\r\n            <Select\r\n              className={styles.select}\r\n              options={swimmingRaceOptions}\r\n              isSearchable={false}\r\n              placeholder={selected}\r\n              value={selected}\r\n              onChange={e => {\r\n                setSelected(e.label);\r\n                setDistance(e.value);\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          {/* Time */}\r\n          <div className={styles.inputGroup}>\r\n            <label>Time (your planned result): </label>\r\n            <Input\r\n              name=\"minutes\"\r\n              value={time.minutes}\r\n              onChange={e => setTime({...time, minutes: e.target.value})}\r\n            />\r\n            <Unit>min</Unit>\r\n            <Input\r\n              name=\"seconds\"\r\n              value={time.seconds}\r\n              onChange={e => setTime({...time, seconds: e.target.value})}\r\n            />\r\n            <Unit>sec</Unit>\r\n          </div>\r\n\r\n          <div className={styles.resultsContainer}>\r\n            <div>\r\n              <h4>Pace</h4>\r\n              <div className={styles.result}>{renderPaceResult()}</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={styles.btnContainer}>\r\n            <Button\r\n              onClick={e => {\r\n                e.preventDefault();\r\n                setDistance('');\r\n                setTime({minutes: '', seconds: ''});\r\n                setPace({minutes: '--', seconds: '--'});\r\n                setSelected('Select...');\r\n              }}\r\n            >\r\n              Reset <i className=\"fas fa-undo-alt\"></i>\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SwimmingPace;\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {updateChosenCalculator} from '../../actions/index';\r\nimport SwimmingPace from '../molecules/SwimmingPace';\r\n\r\nconst SwimmingCalc = ({updateChosenCalculator}) => {\r\n  updateChosenCalculator('Swimming');\r\n  return <SwimmingPace />;\r\n};\r\n\r\nexport default connect(null, {updateChosenCalculator})(SwimmingCalc);\r\n","import React from \"react\";\r\n\r\nconst CyclingCalc = () => {\r\n  return <div>Cycling Calc</div>;\r\n};\r\n\r\nexport default CyclingCalc;\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport Input from '../atoms/Input';\r\nimport Unit from '../atoms/Unit';\r\nimport Button from '../atoms/Button';\r\nimport styles from '../../styles/Calc.module.scss';\r\n\r\nconst OneRepMax = () => {\r\n  const [weight, setWeight] = useState('');\r\n  const [reps, setReps] = useState('');\r\n  const [maxRep, setMaxRep] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (weight && reps) {\r\n      const orm = Math.round(weight * (1 + reps / 30));\r\n      setMaxRep(orm);\r\n    }\r\n  }, [weight, reps]);\r\n\r\n  return (\r\n    <section className={styles.calcWrap}>\r\n      <h3>One Rep Max Calculator</h3>\r\n      <p className={styles.note}>\r\n        With this calculator, you can check what is your 1RM for any lift. One\r\n        Rep Max is a maximum weight that you can lift for a single repetition\r\n        for a given exercise.\r\n      </p>\r\n      <form>\r\n        {/* Weight */}\r\n        <div className={styles.inputGroup}>\r\n          <label>Lifted weight: </label>\r\n          <Input\r\n            name=\"weight\"\r\n            value={weight}\r\n            onChange={e => setWeight(e.target.value)}\r\n          />\r\n          <Unit>kg</Unit>\r\n        </div>\r\n        {/* Repetitions */}\r\n        <div className={styles.inputGroup}>\r\n          <label>Repetitions: </label>\r\n          <Input\r\n            name=\"repetitions\"\r\n            value={reps}\r\n            onChange={e => setReps(e.target.value)}\r\n          />\r\n          <Unit>reps</Unit>\r\n        </div>\r\n\r\n        <div className={styles.resultsContainer}>\r\n          <div>\r\n            <h4>One Rep Max</h4>\r\n            <div className={styles.result}>\r\n              <p>\r\n                <span>{maxRep ? maxRep : '-'} </span>[kg]\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.btnContainer}>\r\n          <Button\r\n            onClick={e => {\r\n              e.preventDefault();\r\n              setWeight('');\r\n              setReps('');\r\n              setMaxRep('');\r\n            }}\r\n          >\r\n            Reset <i className=\"fas fa-undo-alt\"></i>\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default OneRepMax;\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport OneRepMax from '../molecules/OneRepMax';\r\nimport {updateChosenCalculator} from '../../actions/index';\r\n\r\nconst GymCalc = ({updateChosenCalculator}) => {\r\n  updateChosenCalculator('Gym');\r\n\r\n  return (\r\n    <>\r\n      <OneRepMax />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(null, {updateChosenCalculator})(GymCalc);\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport Input from '../atoms/Input';\r\nimport Unit from '../atoms/Unit';\r\nimport Button from '../atoms/Button';\r\nimport styles from '../../styles/Calc.module.scss';\r\n\r\nconst BMI = () => {\r\n  const [height, setHeight] = useState('');\r\n  const [weight, setWeight] = useState('');\r\n  const [bmi, setBMI] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (height & weight) {\r\n      const bmi = weight / (height / 100) ** 2;\r\n      setBMI(bmi.toFixed(2));\r\n    }\r\n  }, [height, weight]);\r\n\r\n  return (\r\n    <section className={styles.calcWrap}>\r\n      <h3>Body Mass Index (BMI) Calculator</h3>\r\n      <p className={styles.note}>\r\n        With this calculator, you can easily calculate your body mass index. The\r\n        number show if your current weight is okay or if you have to loose some\r\n        weight. Please check BMI values range blow:\r\n        <ul>\r\n          <li>Underweight = less than 18.5</li>\r\n          <li>Normal weight = 18.5 - 24.9</li>\r\n          <li>Overweight = 25 - 29.9</li>\r\n          <li>Obesity = 30 - 35</li>\r\n          <li>Severe obesity = 35 and more</li>\r\n        </ul>\r\n      </p>\r\n      <form>\r\n        {/* Height */}\r\n        <div className={styles.inputGroup}>\r\n          <label>Height: </label>\r\n          <Input\r\n            name=\"height\"\r\n            value={height}\r\n            onChange={e => setHeight(e.target.value)}\r\n          />\r\n          <Unit>cm</Unit>\r\n        </div>\r\n        {/* Weight */}\r\n        <div className={styles.inputGroup}>\r\n          <label>Weight: </label>\r\n          <Input\r\n            name=\"weight\"\r\n            value={weight}\r\n            onChange={e => setWeight(e.target.value)}\r\n          />\r\n          <Unit>kg</Unit>\r\n        </div>\r\n\r\n        <div className={styles.resultsContainer}>\r\n          <div>\r\n            <h4>Body Mass Index</h4>\r\n            <div className={styles.result}>\r\n              <p>\r\n                <span>{bmi ? bmi : '-'}</span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.btnContainer}>\r\n          <Button\r\n            onClick={e => {\r\n              e.preventDefault();\r\n              setHeight('');\r\n              setWeight('');\r\n              setBMI('');\r\n            }}\r\n          >\r\n            Reset <i className=\"fas fa-undo-alt\"></i>\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default BMI;\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport BMI from '../molecules/BMI';\r\nimport {updateChosenCalculator} from '../../actions/index';\r\n\r\nconst HealthCalc = ({updateChosenCalculator}) => {\r\n  updateChosenCalculator('Health');\r\n\r\n  return (\r\n    <>\r\n      <BMI />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(null, {updateChosenCalculator})(HealthCalc);\r\n","import React from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\n\nimport Navigation from '../components/molecules/Navigation';\nimport Categories from '../components/routes/Categories';\nimport RunnnigCalc from '../components/routes/RunnigCalc';\nimport SwimmingCalc from '../components/routes/SwimmingCalc';\nimport CyclingCalc from '../components/routes/CyclingCalc';\nimport GymCalc from '../components/routes/GymCalc';\nimport HealthCalc from '../components/routes/HealthCalc';\n\nfunction App() {\n  return (\n    <BrowserRouter basename=\"sport-calculators\">\n      <div className=\"wrap\">\n        <h1>Sport calculators</h1>\n        <Navigation />\n        <Switch>\n          <Route exact path=\"/\" component={Categories} />\n          <Route path=\"/running-calc\" component={RunnnigCalc} />\n          <Route path=\"/swimming-calc\" component={SwimmingCalc} />\n          <Route path=\"/cycling-calc\" component={CyclingCalc} />\n          <Route path=\"/gym-calc\" component={GymCalc} />\n          <Route path=\"/health-calc\" component={HealthCalc} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport {createStore, applyMiddleware, compose} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport reducers from './reducers/index';\r\n\r\nimport App from './components/App';\r\nimport './styles/index.css';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware()));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}